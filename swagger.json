{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Komunitin Social API",
    "description" : null
  },
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/estevebadia/komunitin-api/1.0.0"
  } ],
  "externalDocs" : {
    "url" : "https://github.com/komunitin/komunitin-api/social/README.md",
    "description" : "See the Komunitin Social API documentation"
  },
  "security" : [ {
    "accessCode" : [ ]
  } ],
  "tags" : [ {
    "name" : "Exchanges",
    "description" : "Manage exchange groups"
  }, {
    "name" : "Members",
    "description" : "Manage exchange members"
  }, {
    "name" : "Offers",
    "description" : "Manage exchange offers"
  }, {
    "name" : "Needs",
    "description" : "Manage exchange needs"
  }, {
    "name" : "Messages",
    "description" : "Manage exchange messages"
  } ],
  "paths" : {
    "/exchanges" : {
      "get" : {
        "summary" : "Get exchanges collection",
        "description" : "Return the collection of exchanges in this server.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Exchanges" ]
      },
      "post" : {
        "summary" : "Create new exchange",
        "description" : "Create a new exchange group. The exchange group may not be immediately available, but wait for administration approval.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "$ref" : "#/components/examples/exchange-request"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "tags" : [ "Exchanges" ]
      }
    },
    "/{exchangeCode}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      } ],
      "get" : {
        "summary" : "Get exchange details",
        "description" : "Return the exchange object and links to the related collections.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "examples" : {
                  "exchange" : {
                    "$ref" : "#/components/examples/exchange-response"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "Exchanges" ]
      },
      "patch" : {
        "summary" : "Edit exchange details",
        "description" : "Change some or all exchange fields.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "examples" : {
                  "exchange" : {
                    "$ref" : "#/components/examples/exchange-response"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "Exchanges" ]
      },
      "delete" : {
        "summary" : "Delete exchange group",
        "description" : "Delete an exchange group",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Exchanges" ]
      }
    },
    "/{exchangeCode}/offers" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      } ],
      "get" : {
        "summary" : "Get offers collection",
        "description" : "Return a paginated list of offers that belong to the given exchange group.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Offers" ]
      },
      "post" : {
        "summary" : "Create new offer",
        "description" : "Create a new offer object in this exchange group.",
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "examples" : {
                  "offer-response" : {
                    "$ref" : "#/components/examples/offer-response"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "Offers" ]
      }
    },
    "/{exchangeCode}/offers/{offerCode}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      }, {
        "$ref" : "#/components/parameters/offer"
      } ],
      "get" : {
        "summary" : "Get offer details",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "examples" : {
                  "offer-response" : {
                    "$ref" : "#/components/examples/offer-response"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "Offers" ]
      },
      "patch" : {
        "summary" : "Edit offer details",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Offers" ]
      },
      "delete" : {
        "summary" : "Delete offer",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Offers" ]
      }
    },
    "/{exchangeCode}/members" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      } ],
      "get" : {
        "summary" : "Get members collection",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Members" ]
      },
      "post" : {
        "summary" : "Create new member",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "value" : { }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "examples" : {
                  "member-response" : {
                    "value" : { }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "Members" ]
      }
    },
    "/{exchangeCode}/members/{memberCode}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      }, {
        "$ref" : "#/components/parameters/member"
      } ],
      "get" : {
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Members" ]
      },
      "patch" : {
        "summary" : "Edit member profile",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Members" ]
      },
      "delete" : {
        "summary" : "Delete member",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Members" ]
      }
    },
    "/{exchangeCode}/needs" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      } ],
      "get" : {
        "summary" : "Get needs collection",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Needs" ]
      },
      "post" : {
        "summary" : "Create new need",
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        },
        "tags" : [ "Needs" ]
      }
    },
    "/{exchangeCode}/needs/{needCode}" : {
      "parameters" : [ {
        "$ref" : "#/components/parameters/exchange"
      }, {
        "$ref" : "#/components/parameters/need"
      } ],
      "get" : {
        "summary" : "Get need object",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Needs" ]
      },
      "patch" : {
        "summary" : "Edit need object",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Needs" ]
      },
      "delete" : {
        "summary" : "Delete need",
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "tags" : [ "Needs" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "fields" : {
        "in" : "query",
        "name" : "fields[{type}]",
        "description" : "[See jsonapi.org Sparse Fieldsets](https://jsonapi.org/format/#fetching-sparse-fieldsets)",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "sort" : {
        "in" : "query",
        "name" : "sort",
        "description" : "[See jsonapi.org Sorting](https://jsonapi.org/format/#fetching-sorting)",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "filter" : {
        "in" : "query",
        "name" : "filter[{type}]",
        "description" : "[See jsonapi.org Filtering](https://jsonapi.org/format/#fetching-filtering)",
        "schema" : {
          "type" : "string"
        }
      },
      "include" : {
        "in" : "query",
        "name" : "include",
        "description" : "[See jsonapi.org Inclusion of Related Resources](https://jsonapi.org/format/#fetching-includes)",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "exchange" : {
        "name" : "exchangeCode",
        "description" : "4 letter identifier of the exchange",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "member" : {
        "name" : "memberCode",
        "description" : "4 letter identifier of the exchange plus 4 number identifier of the member.",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "offer" : {
        "name" : "offerCode",
        "description" : "url-safe human-readable lowercase string identifying the offer. This identifier is unique only among the exchange group and automatically derived from the offer title.",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      },
      "need" : {
        "name" : "needCode",
        "description" : "url-safe human-readable lowercase string identifying the need. This identifier is unique only among the exchange group and automatically derived from the need fields.",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "schemas" : {
      "Relationship" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "properties" : {
              "related" : {
                "type" : "string",
                "format" : "url"
              }
            }
          },
          "meta" : {
            "type" : "object"
          }
        }
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "format" : "url"
              }
            }
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "exchanges", "members", "offers", "needs", "categories", "messages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "updated" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "access" : {
                    "type" : "string",
                    "description" : "The access level for this resource. `public` for free access to anyone on the internet, `exchange` for access only to other members of the same exchange group or `private` for access only to yourself and the exchange group administration. Other access labels may be added in the future, such as \"friends\" or \"contacts\".",
                    "enum" : [ "public", "exchange", "private" ]
                  }
                }
              }
            }
          }
        },
        "discriminator" : {
          "propertyName" : "data/type",
          "mapping" : {
            "exchanges" : "exchanges",
            "offers" : "offers",
            "needs" : "needs",
            "members" : "members",
            "categories" : "categories",
            "messages" : "messages"
          }
        }
      },
      "Contacts" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "email", "phone", "whatsapp", "telegram" ]
            },
            "name" : {
              "type" : "string",
              "description" : "The identifier for the contact type. For example, the email address, the phone number or the telegram username."
            }
          }
        }
      },
      "Exchange" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "properties" : {
                "attributes" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string",
                      "format" : "html"
                    },
                    "image" : {
                      "type" : "string",
                      "format" : "url"
                    },
                    "website" : {
                      "type" : "string",
                      "format" : "url"
                    },
                    "location" : {
                      "$ref" : "https://geojson.org/schema/Geometry.json"
                    },
                    "contacts" : {
                      "$ref" : "#/components/schemas/Contacts"
                    }
                  }
                }
              }
            },
            "relationships" : {
              "type" : "object",
              "properties" : {
                "members" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/Relationship"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "meta" : {
                        "type" : "object",
                        "properties" : {
                          "personal" : {
                            "type" : "integer"
                          },
                          "business" : {
                            "type" : "integer"
                          },
                          "organization" : {
                            "type" : "integer"
                          },
                          "public" : {
                            "type" : "integer"
                          },
                          "system" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  } ]
                },
                "categories" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/Relationship"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "meta" : {
                        "type" : "object",
                        "properties" : {
                          "count" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  } ]
                },
                "offers" : {
                  "$ref" : "#/components/schemas/Relationship"
                }
              }
            }
          }
        } ]
      }
    },
    "securitySchemes" : {
      "accessCode" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "http://example.com/oauth/auth",
            "tokenUrl" : "http://example.com/oauth/token",
            "scopes" : { }
          }
        }
      }
    },
    "examples" : {
      "exchange-response" : {
        "summary" : "Exchange example with included category",
        "value" : {
          "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/master/doc/examples/exchange.json"
        }
      },
      "exchange-request" : {
        "summary" : "Request body for creating or updating an exchange",
        "value" : {
          "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/master/doc/examples/exchange-request.json"
        }
      },
      "offer-response" : {
        "summary" : "Offer example",
        "value" : {
          "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/master/doc/examples/offer.json"
        }
      }
    }
  }
}