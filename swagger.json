{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/estevebadia/komunitin-api/1.0.0"
  } ],
  "info" : {
    "version" : "1.0.0",
    "title" : "Komunitin Social API",
    "description" : "API for interacting with the social aspect of Komunitin system.\n\n**This is still a work in progress**. Comments welcomed at komunitinbox@gmail.com or at [GitHub](https://github.com/komunitin/komunitin-api).\n\nThis API provides access to exchange group details, member details and their offers and needs and also informational message broadcasting. It doesn't feature payments nor any finantial information, as this is available in a separate API. Subscrption to notifications (email and push) and notification preferences are also defined in a separate API.\n## Preliminaries\n- This spec is based on the [JSON:API](https://jsonapi.org) standard.\n## Authorization\n\n Authorization endpoints are out of the scope of this API, which expects the user to be authorized with a JWT access token. The access token is provided by a separate authorization API. The recommended OAuth2 flow for web apps and native apps is the Authorization Code Flow with Proof Key for Code Exchange (PKCE).\n \n No OAuth2 scopes are defined at the moment, but may be defined in future.\n\n## Architecture\n \n - The URL structure starts with the exchange 4-letter code, so it eases the isolation among different exchange groups in a single server. The only exception is the global `exchanges/` endpoint.\n - All resources have a global UUID identifier as their `id` field, but the URLs are human-readable. The URLs are meant to be almost immutable to allow caching and others, but can occasinally change (for example, in case of server migration), while the UUIDs are really immutable.\n - Geolocation fields follow the [GeoJSON](https://geojson.org/) specification.\n - Date or time fields follow the [RFC3339](https://tools.ietf.org/html/rfc3339) specification.\n - Text fields allow formatting through a restricted set of HTML tags.\n \n ## Data privacy\n \n Access to resources (Exchanges, Members, Offers, Needs, Messages) may be restricted bay assigning one of the predefined access levels to the `access` resource field.\n  - `private`: The resource is only accessible by its owner.\n  - `exchange`: The resource is only accessible by the members of the same exchange group.\n  - `public`: The resource is publicly accessible on the internet.\nOther access levels may be added in the future.\n  "
  },
  "security" : [ {
    "accessCode" : [ ]
  } ],
  "paths" : {
    "/exchanges" : {
      "get" : {
        "summary" : "Get the exchanges collection",
        "description" : "Return the collection of active exchanges registered in this server.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        }, {
          "$ref" : "#/components/parameters/sort"
        }, {
          "$ref" : "#/components/parameters/filter"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      },
      "post" : {
        "summary" : "Create a new exchange",
        "description" : "Create a new exchange group. The exchange group may not be immediately available, but wait for administration approval.",
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/{exchangeCode}" : {
      "get" : {
        "summary" : "Get the exchange details",
        "description" : "Return the exchange object and links to the related collections.",
        "parameters" : [ {
          "$ref" : "#/components/parameters/exchange"
        }, {
          "$ref" : "#/components/parameters/fields"
        }, {
          "$ref" : "#/components/parameters/include"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "examples" : {
                  "example-exchange" : {
                    "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/master/doc/examples/exchange.json"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "parameters" : {
      "fields" : {
        "in" : "query",
        "name" : "fields[{type}]",
        "description" : "[See jsonapi.org Sparse Fieldsets](https://jsonapi.org/format/#fetching-sparse-fieldsets)",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "sort" : {
        "in" : "query",
        "name" : "sort",
        "description" : "[See jsonapi.org Sorting](https://jsonapi.org/format/#fetching-sorting)",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "filter" : {
        "in" : "query",
        "name" : "filter[{type}]",
        "description" : "[See jsonapi.org Filtering](https://jsonapi.org/format/#fetching-filtering)",
        "schema" : {
          "type" : "string"
        }
      },
      "include" : {
        "in" : "query",
        "name" : "include",
        "description" : "[See jsonapi.org Inclusion of Related Resources](https://jsonapi.org/format/#fetching-includes)",
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "exchange" : {
        "name" : "exchangeCode",
        "description" : "4-letter identifier of the exchange",
        "in" : "path",
        "required" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "schemas" : {
      "Relationship" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "properties" : {
              "related" : {
                "type" : "string",
                "format" : "url"
              }
            }
          },
          "meta" : {
            "type" : "object"
          }
        }
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "properties" : {
              "self" : {
                "type" : "string",
                "format" : "url"
              }
            }
          },
          "data" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "exchanges", "members", "offers", "needs", "categories", "messages" ]
              },
              "attributes" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "updated" : {
                    "type" : "string",
                    "format" : "date-time"
                  },
                  "access" : {
                    "type" : "string",
                    "description" : "The access level for this resource. `public` for free access to anyone on the internet, `exchange` for access only to other members of the same exchange group or `private` for access only to yourself and the exchange group administration. Other access labels may be added in the future, such as \"friends\" or \"contacts\".",
                    "enum" : [ "public", "exchange", "private" ]
                  }
                }
              }
            }
          }
        },
        "discriminator" : {
          "propertyName" : "data/type",
          "mapping" : {
            "exchange" : "exchange",
            "offer" : "offer",
            "need" : "need",
            "member" : "member",
            "category" : "category",
            "message" : "message"
          }
        }
      },
      "Contacts" : {
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "email", "phone", "whatsapp", "telegram" ]
            },
            "name" : {
              "type" : "string",
              "description" : "The identifier for the contact type. For example, the email address, the phone number or the telegram username."
            }
          }
        }
      },
      "Exchange" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Resource"
        }, {
          "type" : "object",
          "properties" : {
            "data" : {
              "type" : "object",
              "properties" : {
                "attributes" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string",
                      "format" : "html"
                    },
                    "image" : {
                      "type" : "string",
                      "format" : "url"
                    },
                    "website" : {
                      "type" : "string",
                      "format" : "url"
                    },
                    "location" : {
                      "$ref" : "https://geojson.org/schema/Geometry.json"
                    },
                    "contacts" : {
                      "$ref" : "#/components/schemas/Contacts"
                    }
                  }
                }
              }
            },
            "relationships" : {
              "type" : "object",
              "properties" : {
                "accounts" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/Relationship"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "meta" : {
                        "type" : "object",
                        "properties" : {
                          "personal" : {
                            "type" : "integer"
                          },
                          "business" : {
                            "type" : "integer"
                          },
                          "organization" : {
                            "type" : "integer"
                          },
                          "public" : {
                            "type" : "integer"
                          },
                          "system" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  } ]
                },
                "categories" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/Relationship"
                  }, {
                    "type" : "object",
                    "properties" : {
                      "meta" : {
                        "type" : "object",
                        "properties" : {
                          "count" : {
                            "type" : "integer"
                          }
                        }
                      }
                    }
                  } ]
                },
                "offers" : {
                  "$ref" : "#/components/schemas/Relationship"
                }
              }
            }
          }
        } ]
      }
    },
    "securitySchemes" : {
      "accessCode" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "http://example.com/oauth/auth",
            "tokenUrl" : "http://example.com/oauth/token",
            "scopes" : { }
          }
        }
      }
    },
    "examples" : {
      "example-member" : {
        "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/master/doc/examples/member.json"
      },
      "example-exchange" : {
        "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/master/doc/examples/exchange.json"
      },
      "example-offer" : {
        "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/blob/master/doc/examples/offer.json"
      },
      "example-need" : {
        "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/blob/master/doc/examples/need.json"
      },
      "example-category" : {
        "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/blob/master/doc/examples/category.json"
      },
      "example-message" : {
        "$ref" : "https://raw.githubusercontent.com/komunitin/komunitin-api/blob/master/doc/examples/message.json"
      }
    }
  }
}