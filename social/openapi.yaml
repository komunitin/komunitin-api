openapi: 3.0.0
# Added by API Auto Mocking Plugin
info:
  version: "0.0.1"
  title: Komunitin Social API
  description: >-
    REST API featuring marketplace services for Exchange Communities.


    **This is still a work in progress.**
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/estevebadia/komunitin-api/1.0.0
externalDocs:
  url: "https://github.com/komunitin/komunitin-api/blob/master/social/README.md"
  description: "See the Komunitin Social API documentation"

security:
  - accessCode: []
tags:
  - name: Users
    description: Manage users
  - name: Groups
    description: Manage groups
  - name: Members
    description: Manage members
  - name: Contacts
    description: Manage group and member contacts
  - name: Offers
    description: Manage offers
  - name: Needs
    description: Manage needs
  - name: Categories
    description: Manage categories for offers and needs
  - name: Posts
    description: Manage posts
paths:
  /users/me:
    parameters:
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/include"
    get:
      summary: Get logged in user
      description: >-
        Return the user resource for the currently logged in user, identified
        by the Authorization token.
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                users-get:
                  $ref: "#/components/examples/user-get"
      tags:
        - Users

  /groups:
    parameters:
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/include"

    get:
      summary: Get groups collection
      description: >-
        Return the collection of groups in this server. The results are paginated
        using the `links` section of the response. The caller may use the field
        `sort` in conjuntion with the field `geo-position` in order to get the groups
        closer to the caller position. For example:

        `GET /groups?sort=location&geo-position=12.33,14.55 HTTP/1.1`

        It is recommended to fetch the related `contacts` using the `include`
        field.

        `currency` has the same structure as a relationship but it is an attribute
        since it belongs to the external Accounting API. In particular it can't be
        included in the response.
      parameters:
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/include"
        - $ref: "#/components/parameters/filter"
        - $ref: "#/components/parameters/geo-position"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                collection:
                  $ref: "#/components/examples/collection"

      tags:
        - Groups
    post:
      summary: Create new group
      description: >-
        Create a new group. The group may not be immediately available, but wait for administration approval.
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              group-post:
                $ref: "#/components/examples/group-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                group-get:
                  $ref: "#/components/examples/group-get"
      tags:
        - Groups
  /{groupCode}:
    parameters:
      - $ref: "#/components/parameters/group"
    get:
      summary: Get group details
      description: >-
        Returns the group object and links to the related collections.

        It is recommended to fetch the related `contacts` using the `include`
        field.

        `currency` has the same structure as a relationship but it is an attribute
        since it belongs to the external Accounting API. In particular it can't be
        included in the response.

      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                group:
                  $ref: "#/components/examples/group-get"
      tags:
        - Groups
    patch:
      summary: Edit group details
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      description: >-
        Change some or all group fields.
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              group-patch:
                $ref: "#/components/examples/group-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                group:
                  $ref: "#/components/examples/group-get"
      tags:
        - Groups
    delete:
      summary: Delete group
      description: >-
        Delete a group
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Groups
  /{groupCode}/offers:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/include"
    get:
      summary: Get offers collection
      description: >-
        Return a paginated list of offers that belong to the given group.
      parameters:
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/filter"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                collection:
                  $ref: "#/components/examples/collection"
      tags:
        - Offers
    post:
      summary: Create new offer
      description: >-
        Create a new offer object in this group.
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              offer-post:
                $ref: "#/components/examples/offer-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                offer-response:
                  $ref: "#/components/examples/offer-get"
      tags:
        - Offers
  /{groupCode}/offers/{offerCode}:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/offer"
    get:
      summary: Get offer details
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                offer-response:
                  $ref: "#/components/examples/offer-get"
      tags:
        - Offers
    patch:
      summary: Edit offer details
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              offer-patch:
                $ref: "#/components/examples/offer-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                offer-get:
                  $ref: "#/components/examples/offer-get"
      tags:
        - Offers
    delete:
      summary: Delete offer
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Offers
  /{groupCode}/members:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/include"
    get:
      summary: Get members collection
      description: >-
        Return the collection of members in a group.


        `account` has the same structure as a relationship but it is an attribute
        since it belongs to the external Accounting API. In particular it can't be
        included in the response.

      parameters:
        - $ref: "#/components/parameters/sort"
        - $ref: "#/components/parameters/filter"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                collection:
                  $ref: "#/components/examples/collection"
      tags:
        - Members
    post:
      summary: Create new member
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              member-post:
                $ref: "#/components/examples/member-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                member-get:
                  $ref: "#/components/examples/member-get"
      tags:
        - Members
  /{groupCode}/members/{memberCode}:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/member"
    get:
      summary: Get a member object
      description: >-
        Return a member resource object.

        `account` has the same structure as a relationship but it is an attribute
        since it belongs to the external Accounting API. In particular it can't be
        included in the response.
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                member-get:
                  $ref: "#/components/examples/member-get"
      tags:
        - Members
    patch:
      summary: Edit member profile
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              member-patch:
                $ref: "#/components/examples/member-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                member-get:
                  $ref: "#/components/examples/member-get"
      tags:
        - Members
    delete:
      summary: Delete member
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Members
  /{groupCode}/needs:
    parameters:
      - $ref: "#/components/parameters/group"
    get:
      summary: Get needs collection
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                collection:
                  $ref: "#/components/examples/collection"
      tags:
        - Needs
    post:
      summary: Create new need
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              need-post:
                $ref: "#/components/examples/need-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                need-get:
                  $ref: "#/components/examples/need-get"
      tags:
        - Needs
  /{groupCode}/needs/{needCode}:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/need"
    get:
      summary: Get need object
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                need-get:
                  $ref: "#/components/examples/need-get"
      tags:
        - Needs
    patch:
      summary: Edit need object
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              need-patch:
                $ref: "#/components/examples/need-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                need-get:
                  $ref: "#/components/examples/need-get"
      tags:
        - Needs
    delete:
      summary: Delete need
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Needs
  /contacts:
    post:
      summary: Create contact
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              contact-post:
                $ref: "#/components/examples/contact-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                contact-get:
                  $ref: "#/components/examples/contact-get"
      tags:
        - Contacts
  /contacts/{contactId}:
    parameters:
      - $ref: "#/components/parameters/contact"
    patch:
      summary: Edit contact
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              contact-patch:
                $ref: "#/components/examples/contact-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                contact-patch:
                  $ref: "#/components/examples/contact-patch"
      tags:
        - Contacts
    delete:
      summary: Delete contact
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Contacts
  /{groupCode}/posts:
    parameters:
      - $ref: "#/components/parameters/group"
    get:
      summary: Get posts collection
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                collection:
                  $ref: "#/components/examples/collection"
      tags:
        - Posts
    post:
      summary: Create new post
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              post-post:
                $ref: "#/components/examples/post-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                post-get:
                  $ref: "#/components/examples/post-get"
      tags:
        - Posts
  /{groupCode}/posts/{postCode}:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/post"
    get:
      summary: Get post object
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                post-get:
                  $ref: "#/components/examples/post-get"
      tags:
        - Posts
    patch:
      summary: Edit post object
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              post-patch:
                $ref: "#/components/examples/post-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                post-get:
                  $ref: "#/components/examples/post-get"
      tags:
        - Posts
    delete:
      summary: Delete post
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Posts

  /{groupCode}/categories:
    parameters:
      - $ref: "#/components/parameters/group"
    get:
      summary: Get categories collection
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                collection:
                  $ref: "#/components/examples/collection"
      tags:
        - Categories
    post:
      summary: Create new category
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              category-post:
                $ref: "#/components/examples/category-post"
      responses:
        "201":
          description: Created
          content:
            "application/vnd.api+json":
              examples:
                category-get:
                  $ref: "#/components/examples/category-get"
      tags:
        - Categories
  /{groupCode}/categories/{categoryCode}:
    parameters:
      - $ref: "#/components/parameters/group"
      - $ref: "#/components/parameters/category"
    get:
      summary: Get category object
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                category-get:
                  $ref: "#/components/examples/category-get"
      tags:
        - Categories
    patch:
      summary: Edit category object
      parameters:
        - $ref: "#/components/parameters/fields"
        - $ref: "#/components/parameters/include"
      requestBody:
        content:
          "application/vnd.api+json":
            schema: {}
            examples:
              category-patch:
                $ref: "#/components/examples/category-patch"
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              examples:
                category-get:
                  $ref: "#/components/examples/category-get"
      tags:
        - Categories
    delete:
      summary: Delete category
      responses:
        "200":
          description: OK
          content:
            "application/vnd.api+json":
              schema: {}
      tags:
        - Categories

components:
  parameters:
    fields:
      in: query
      name: "fields[{type}]"
      description: >-
        [See jsonapi.org Sparse Fieldsets](https://jsonapi.org/format/#fetching-sparse-fieldsets)
      schema:
        type: array
        items:
          type: string
    sort:
      in: query
      name: "sort"
      description: >-
        [See jsonapi.org Sorting](https://jsonapi.org/format/#fetching-sorting)
      schema:
        type: array
        items:
          type: string
      example: location,title
    geo-position:
      in: query
      name: "geo-position"
      description: >-
        Position from where to sort the location parameter, in [geo URI](https://tools.ietf.org/rfc/rfc5870) encoding.
      schema:
        type: string
        format: geo
      example: 22.54,33.45
    filter:
      in: query
      name: "filter[{type}]"
      description: >-
        [See jsonapi.org Filtering](https://jsonapi.org/format/#fetching-filtering)
      schema:
        type: string
    include:
      in: query
      name: "include"
      description: >-
        [See jsonapi.org Inclusion of Related Resources](https://jsonapi.org/format/#fetching-includes)
      schema:
        type: array
        items:
          type: string
    group:
      name: groupCode
      description: >-
        4 letter identifier of the group
      in: path
      required: true
      schema:
        type: string
    member:
      name: memberCode
      description: >-
        4 letter identifier of the group plus 4 number identifier of the member.
      in: path
      required: true
      schema:
        type: string
    offer:
      name: offerCode
      description: >-
        url-safe human-readable lowercase string identifying the offer. This identifier is unique only within the group and automatically derived from the offer title.
      in: path
      required: true
      schema:
        type: string
    need:
      name: needCode
      description: >-
        url-safe human-readable lowercase string identifying the need. This identifier is unique only within the group and automatically derived from the need fields.
      in: path
      required: true
      schema:
        type: string
    contact:
      name: contactId
      description: >-
        contact UUID
      in: path
      required: true
      schema:
        type: string
    post:
      name: postCode
      description: >-
        url-safe human-readable string identifying the post. This identifier is unique only within the group and automatically derived from the post fields.
      in: path
      required: true
      schema:
        type: string
    category:
      name: categoryCode
      description: >-
        url-safe human-readable string identifying the category. This identifier is unique only within the group and automatically derived from the category title.
      in: path
      required: true
      schema:
        type: string

  securitySchemes:
    accessCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: "http://example.com/oauth/auth"
          tokenUrl: "http://example.com/oauth/token"
          scopes: {}
  examples:
    user-get:
      summary: "Get user"
      value:
        {
          "data":
            {
              "type": "users",
              "id": "4383d69d-60ec-4e78-bcd1-f8ef37471939",
              "relationships":
                {
                  "members":
                    {
                      "data":
                        [
                          {
                            "type": "members",
                            "id": "9683ec5d-29d3-419a-8753-a5d092f1bb3d",
                          },
                        ],
                    },
                },
            },
          "included":
            [
              {
                "type": "members",
                "id": "9683ec5d-29d3-419a-8753-a5d092f1bb3d",
                "attributes": { //... },
                "relationships": { //... },
                "links":
                  {
                    "self": "https://komunitin.org/EITE/members/maries-bakery",
                  },
              },
            ],
        }
    group-get:
      summary: "Get group"
      value:
        {
          "data":
            {
              "id": "84278843-50d5-4358-bbf7-a833ea5cde07",
              "type": "groups",
              "attributes":
                {
                  "code": "EITE",
                  "name": "Easter Island Talent Exchange",
                  "description": "<p>Here at <strong>Easter Island</strong> it makes a lot of sense to have a local currency because bla bla bla...",
                  "image": "https://komunitin.org/files/EITE/c445714f-5a9f-410a-bd8e-1ffe20970c74.png",
                  "website": "https://easterislandexchange.org",
                  "access": "public",
                  "location":
                    {
                      "name": "Easter Island",
                      "type": "Point",
                      "coordinates": [-109.44236755371094, -27.201510867989075],
                    },
                  "created": "2011-08-19T23:15:30.000Z",
                  "updated": "2020-08-19T23:15:30.000Z",
                },
              "relationships":
                {
                  "contacts":
                    {
                      "data":
                        [
                          {
                            "type": "contacts",
                            "id": "7ceb75eb-9da0-4746-bb61-a34e0be49112",
                          },
                          {
                            "type": "contacts",
                            "id": "193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                          },
                        ],
                    },
                  "members":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/members" },
                      "meta": { "count": 105 },
                    },
                  "categories":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/categories" },
                      "meta": { "count": 2 },
                    },
                  "offers":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/offers" },
                      "meta": { "count": 170 },
                    },
                  "needs":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/needs" },
                      "meta": { "count": 6 },
                    },
                  "posts":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/posts" },
                      "meta": { "count": 432 },
                    },
                  "currency":
                    {
                      "data":
                        {
                          "external": true,
                          "href": "https://accounting.komunitin.org/EITE/currency",
                          "type": "currencies",
                          "id": "45fd62f1-08e9-4a7b-8593-d36746c0e99c",
                        },
                    },
                },
              "links": { "self": "https://komunitin.org/EITE" },
            },
          "included":
            [
              {
                "type": "contacts",
                "id": "7ceb75eb-9da0-4746-bb61-a34e0be49112",
                "attributes":
                  {
                    "type": "phone",
                    "name": "+34 666 77 88 99",
                    "created": "2011-08-19T23:15:30.000Z",
                    "updated": "2011-08-19T23:15:30.000Z",
                  },
                "links":
                  {
                    "self": "https://komunitin.org/EITE/contacts/7ceb75eb-9da0-4746-bb61-a34e0be49112",
                  },
              },
              {
                "type": "contacts",
                "id": "193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                "attributes":
                  {
                    "type": "email",
                    "name": "exhange@easterisland.com",
                    "created": "2011-08-19T23:15:30.000Z",
                    "updated": "2011-08-19T23:15:30.000Z",
                  },
                "links":
                  {
                    "self": "https://komunitin.org/EITE/contacts/193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                  },
              },
            ],
        }
    group-post:
      summary: "Create group payload"
      value:
        {
          "data":
            {
              "type": "groups",
              "attributes":
                {
                  "code": "EITE",
                  "name": "Easter Island Talent Exchange",
                  "description": "<p>Here at <strong>Easter Island</strong> it makes a lot of sense to have a local currency because bla bla bla...",
                  "image": "https://komunitin.org/files/EITE/c445714f-5a9f-410a-bd8e-1ffe20970c74.png",
                  "website": "https://easterislandexchange.org",
                  "access": "public",
                  "location":
                    {
                      "name": "Easter Island",
                      "type": "Point",
                      "coordinates": [-109.44236755371094, -27.201510867989075],
                    },
                },
              "relationships":
                {
                  "currency":
                    {
                      "data":
                        {
                          "external": true,
                          "href": "https://accounting.komunitin.org/EITE/currency",
                          "type": "currencies",
                          "id": "45fd62f1-08e9-4a7b-8593-d36746c0e99c",
                        },
                    },
                },
            },
        }
    group-patch:
      summary: "Update group"
      value:
        {
          "data":
            {
              "type": "groups",
              "id": "84278843-50d5-4358-bbf7-a833ea5cde07",
              "attributes":
                {
                  "description": "<p>Here at the lovely <strong>Easter Island</strong> bla bla bla...",
                },
            },
        }
    member-get:
      summary: "Get member"
      value:
        {
          "data":
            {
              "id": "9683ec5d-29d3-419a-8753-a5d092f1bb3d",
              "type": "members",
              "attributes":
                {
                  "code": "maries-bakery",
                  "name": "Marie's Bakery",
                  "access": "group",
                  "type": "business",
                  "description": "My mother Marie opened the first bakery in the town 50 years ago. Since then...",
                  "image": "https://komunitin.org/files/EITE/68cbbec3-df9d-4af0-b333-07bb4c404a24.jpeg",
                  "address":
                    {
                      "streetAddress": "7 S. Broadway",
                      "addressLocality": "Denver",
                      "postalCode": "80209",
                      "addressRegion": "CO",
                    },
                  "location":
                    {
                      "type": "Point",
                      "coordinates": [-109.44236755371094, -27.201510867989075],
                    },
                  "created": "2019-08-19T23:15:30.000Z",
                  "updated": "2020-08-19T23:15:30.000Z",
                },
              "relationships":
                {
                  "contacts":
                    {
                      "data":
                        [
                          {
                            "type": "contacts",
                            "id": "7ceb75eb-9da0-4746-bb61-a34e0be49112",
                          },
                          {
                            "type": "contacts",
                            "id": "193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                          },
                        ],
                    },
                  "group":
                    { "links": { "related": "https://komunitin.org/EITE" } },
                  "needs":
                    {
                      "links":
                        {
                          "related": "https://komunitin.org/EITE/needs?filter[member]=maries-bakery",
                        },
                      "meta": { "count": 0 },
                    },
                  "offers":
                    {
                      "links":
                        {
                          "related": "https://komunitin.org/EITE/offers?filter[member]=maries-bakery",
                        },
                      "meta": { "count": 1 },
                    },
                  "account":
                    {
                      "data":
                        {
                          "external": true,
                          "href": "https://accounting.komunitin.org/EITE/accounts/EITE0005",
                          "type": "accounts",
                          "id": "f0f79f57-7b42-4f7a-ab24-492152890e43",
                        },
                    },
                },
              "links":
                { "self": "https://komunitin.org/EITE/members/maries-bakery" },
            },
          "included":
            [
              {
                "type": "contacts",
                "id": "7ceb75eb-9da0-4746-bb61-a34e0be49112",
                "attributes":
                  {
                    "type": "phone",
                    "name": "+34 666 77 88 99",
                    "created": "2019-08-19T23:15:30.000Z",
                    "updated": "2020-08-19T23:15:30.000Z",
                  },
                "links":
                  {
                    "self": "https://komunitin.org/EITE/contacts/7ceb75eb-9da0-4746-bb61-a34e0be49112",
                  },
              },
              {
                "type": "contacts",
                "id": "193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                "attributes":
                  {
                    "type": "email",
                    "name": "exhange@easterisland.com",
                    "created": "2019-08-19T23:15:30.000Z",
                    "updated": "2020-08-19T23:15:30.000Z",
                  },
                "links":
                  {
                    "self": "https://komunitin.org/EITE/contacts/193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                  },
              },
            ],
        }
    member-post:
      summary: "Create member"
      value:
        {
          "data":
            {
              "type": "members",
              "attributes":
                {
                  "code": "maries-bakery",
                  "name": "Marie's Bakery",
                  "access": "group",
                  "type": "business",
                  "description": "My mother Marie opened the first bakery in the town 50 years ago. Since then...",
                  "image": "https://komunitin.org/files/EITE/68cbbec3-df9d-4af0-b333-07bb4c404a24.jpeg",
                  "address":
                    {
                      "streetAddress": "7 S. Broadway",
                      "addressLocality": "Denver",
                      "postalCode": "80209",
                      "addressRegion": "CO",
                    },
                  "location":
                    {
                      "type": "Point",
                      "coordinates": [-109.44236755371094, -27.201510867989075],
                    },
                },
              "relationships":
                {
                  "account":
                    {
                      "data":
                        {
                          "external": true,
                          "href": "https://accounting.komunitin.org/EITE/accounts/EITE0005",
                          "type": "accounts",
                          "id": "f0f79f57-7b42-4f7a-ab24-492152890e43",
                        },
                    },
                },
            },
        }

    member-patch:
      summary: "Update member"
      value:
        {
          "data":
            {
              "type": "members",
              "id": "9683ec5d-29d3-419a-8753-a5d092f1bb3d",
              "attributes":
                {
                  "location":
                    {
                      "type": "Point",
                      "coordinates": [-109.44236755371094, -27.201510867989075],
                    },
                },
            },
        }

    category-get:
      summary: "Get category"
      value:
        {
          "data":
            {
              "type": "categories",
              "id": "6a1f9500-0ff7-4ac7-9753-63829a626d5f",
              "attributes":
                {
                  "code": "food",
                  "name": "Food",
                  "cpa": ["10", "11", "56"],
                  "description": "Alimentation and beverage products and services",
                  "icon": "https://komunitin.org/static/icons/food.svg",
                  "access": "public",
                  "created": "2011-08-19T23:15:30.000Z",
                  "updated": "2020-08-19T23:15:30.000Z",
                },
              "relationships":
                {
                  "group":
                    { "links": { "related": "https://komunitin.org/EITE" } },
                  "needs":
                    {
                      "links":
                        {
                          "related": "https://komunitin.org/EITE/needs?filter[category]=food",
                        },
                      "meta": { "count": 2 },
                    },
                  "offers":
                    {
                      "links":
                        {
                          "related": "https://komunitin.org/EITE/offers?filter[category]=food",
                        },
                      "meta": { "count": 32 },
                    },
                },
              "links": { "self": "https://komunitin.org/EITE/categories/food" },
            },
        }

    category-post:
      summary: "Create category"
      value:
        {
          "data":
            {
              "type": "categories",
              "attributes":
                {
                  "name": "Food",
                  "cpa": ["10", "11", "56"],
                  "description": "Alimentation and beverage products and services",
                  "icon": "https://komunitin.org/static/icons/food.svg",
                  "access": "public",
                },
            },
        }
    category-patch:
      summary: "Update category"
      value:
        {
          "data":
            {
              "type": "categories",
              "id": "6a1f9500-0ff7-4ac7-9753-63829a626d5f",
              "attributes":
                {
                  "name": "Food",
                  "cpa": ["10", "11", "56"],
                  "description": "Alimentation and beverage products and services",
                },
            },
        }
    offer-get:
      summary: "Get offer"
      value:
        {
          "data":
            {
              "type": "offer",
              "id": "785ad832-971f-4c7b-a31c-0adb8eafed86",
              "attributes":
                {
                  "code": "ecologic-bread",
                  "name": "Ecologic Bread",
                  "content": "<p>We stand up every morning at 3h AM in order to...",
                  "images":
                    [
                      {
                        "href": "https://komunitin.org/files/EITE/0cdc8a80-1c63-418d-99b6-ee53f366b097.jpeg",
                        "alt": "Ecologic Bread image",
                      },
                      {
                        "href": "https://komunitin.org/files/EITE/9fb3c174-3436-4928-b3f9-3a969310b18a.jpeg",
                        "alt": "Ecologic Bread image 2",
                      },
                    ],
                  "access": "public",
                  "expires": "2020-08-20T23:15:30.000Z",
                  "created": "2019-08-19T23:15:30.000Z",
                  "updated": "2020-08-19T23:15:30.000Z",
                },
              "relationships":
                {
                  "category":
                    {
                      "links":
                        {
                          "related": "https://komunitin.org/EITE/categories/food",
                        },
                    },
                  "author":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/EITE0005" },
                    },
                },
              "links":
                { "self": "https://komunitin.org/EITE/offers/ecologic-bread" },
            },
        }
    offer-post:
      summary: "Create offer"
      value:
        {
          "data":
            {
              "type": "offer",
              "attributes":
                {
                  "name": "Ecologic Bread",
                  "content": "<p>We stand up every morning at 3h AM in order to...",
                  "images":
                    [
                      {
                        "href": "https://komunitin.org/files/EITE/0cdc8a80-1c63-418d-99b6-ee53f366b097.jpeg",
                        "alt": "Ecologic Bread image",
                      },
                    ],
                  "expires": "2020-08-20T23:15:30.000Z",
                  "access": "public",
                },
              "relationships":
                {
                  "category":
                    {
                      "data":
                        {
                          "type": "categories",
                          "id": "6a1f9500-0ff7-4ac7-9753-63829a626d5f",
                        },
                    },
                  "author":
                    {
                      "data":
                        {
                          "type": "members",
                          "id": "9683ec5d-29d3-419a-8753-a5d092f1bb3d",
                        },
                    },
                },
            },
        }

    offer-patch:
      summary: "Update offer"
      value:
        {
          "data":
            {
              "type": "offer",
              "id": "785ad832-971f-4c7b-a31c-0adb8eafed86",
              "attributes":
                {
                  "images":
                    [
                      {
                        "href": "https://komunitin.org/files/EITE/0cdc8a80-1c63-418d-99b6-ee53f366b097.jpeg",
                        "alt": "Ecologic Bread image",
                      },
                      {
                        "href": "https://komunitin.org/files/EITE/9fb3c174-3436-4928-b3f9-3a969310b18a.jpeg",
                        "alt": "Ecologic Bread image 2",
                      },
                    ],
                },
            },
        }
    need-get:
      summary: "Get need"
      value:
        {
          "data":
            {
              "type": "needs",
              "id": "76f46e54-94c9-4893-addf-03f86ee8e8c8",
              "attributes":
                {
                  "code": "agency-3",
                  "content": "I need a business agency to manage the accounting for me. My business has been growing a bit and it's not sustainable for me to keep doing the numbers myself. It doesn't need to be a professional agency, but anybody who know how to do accountability for a small local business.",
                  "images": [],
                  "expires": "2020-08-20T23:15:30.000Z",
                  "access": "group",
                  "created": "2019-08-19T23:15:30.000Z",
                  "updated": "2020-08-19T23:15:30.000Z",
                },
              "relationships":
                {
                  "category":
                    {
                      "links":
                        {
                          "related": "https://komunitin.org/EITE/categories/professional-services",
                        },
                    },
                  "author":
                    {
                      "links":
                        { "related": "https://komunitin.org/EITE/EITE0005" },
                    },
                },
              "links": { "self": "https://komunitin.org/EITE/needs/agency-3" },
            },
        }
    need-post:
      summary: "Create need"
      value:
        {
          "data":
            {
              "type": "needs",
              "attributes":
                {
                  "code": "agency-3",
                  "content": "I need a business agency to manage the accounting for me. My business has been growing a bit and it's not sustainable for me to keep doing the numbers myself. It doesn't need to be a professional agency, but anybody who know how to do accountability for a small local business.",
                  "images": [],
                  "expires": "2020-08-20T23:15:30.000Z",
                  "access": "group",
                },
              "relationships":
                {
                  "category":
                    {
                      "data":
                        {
                          "type": "categories",
                          "id": "048e7d8e-f3a8-4c0b-88b1-984e7050378c",
                        },
                    },
                  "author":
                    {
                      "data":
                        {
                          "type": "members",
                          "id": "9683ec5d-29d3-419a-8753-a5d092f1bb3d",
                        },
                    },
                },
            },
        }

    need-patch:
      summary: "Update need"
      value:
        {
          "data":
            {
              "type": "needs",
              "id": "76f46e54-94c9-4893-addf-03f86ee8e8c8",
              "relationships":
                {
                  "category":
                    {
                      "data":
                        {
                          "type": "categories",
                          "id": "048e7d8e-f3a8-4c0b-88b1-984e7050378c",
                        },
                    },
                },
            },
        }

    contact-get:
      summary: "Get contact"
      value:
        {
          "data":
            {
              "type": "contacts",
              "id": "193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
              "attribues":
                {
                  "type": "phone",
                  "name": "+34 666 77 88 00",
                  "created": "2011-08-19T23:15:30.000Z",
                  "updated": "2020-08-19T23:15:30.000Z",
                },
              "relationships":
                {
                  "owner":
                    {
                      "data":
                        {
                          "type": "groups",
                          "id": "84278843-50d5-4358-bbf7-a833ea5cde07",
                        },
                    },
                },
              "links":
                {
                  "self": "https://komunitin.org/EITE/contacts/193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
                },
            },
        }

    contact-post:
      summary: "Create contact"
      value:
        {
          "data":
            {
              "type": "contacts",
              "attribues": { "type": "phone", "name": "+34 666 77 88 99" },
              "relationships":
                {
                  "owner":
                    {
                      "data":
                        {
                          "type": "groups",
                          "id": "84278843-50d5-4358-bbf7-a833ea5cde07",
                        },
                    },
                },
            },
        }
    contact-patch:
      summary: "Update contact"
      value:
        {
          "data":
            {
              "type": "contacts",
              "id": "193e98b4-a27d-4e8a-9a47-2dc5cd1c1ffb",
              "attribues": { "name": "+34 666 77 88 00" },
            },
        }
    post-get:
      summary: "Get post"
      value: {}
    post-post:
      summary: "Create post"
      value: {}
    post-patch:
      summary: "Update post"
      value: {}
    collection:
      summary: "Generic collection"
      value:
        {
          "data": [// See the specific example for each type],
          "links":
            {
              "self": "https://komunitin.org/EITE/{type}",
              "first": "https://komunitin.org/EITE/{type}",
              "prev": null,
              "next": "https://komunitin.org/EITE/{type}?page[after]={cursor}",
            },
          "meta": { "count": 1234 },
        }
